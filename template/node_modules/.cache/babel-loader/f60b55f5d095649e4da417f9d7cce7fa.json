{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/anhdu/OneDrive/Desktop/HrManager/hrmanager/template/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\anhdu\\\\OneDrive\\\\Desktop\\\\HrManager\\\\hrmanager\\\\template\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{SET_APPROVED,ADD_APPROVED,PUT_APPROVED}from'./types';import approvalApi from'../../api/approvalApi';import{getAlerts}from'../actions/alertAct';export var setApproval=function setApproval(items){return{type:SET_APPROVED,payload:items};};// fetch all \nexport var fetchApproval=function fetchApproval(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:approvalApi.getAll().then(function(res){return dispatch(setApproval(res));}).catch(function(err){return dispatch(getAlerts({msg:\"disconnect fetch : \".concat(err.message,\" \"),type:'error'}));});case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};// Create approval\nexport var addApproval=function addApproval(data){return function(dispatch){approvalApi.post(data).then(function(res){dispatch(getAlerts({msg:\"\\u0110\\xE3 t\\u1EA1o \\u0111\\u01A1n xin ngh\\u1EC9\",title:'Success'}));dispatch({type:ADD_APPROVED,payload:res});}).catch(function(err){dispatch(getAlerts({msg:err.response.statusText,title:'Error'}));});};};// Put approval\nexport var editApproval=function editApproval(id,data){return function(dispatch){approvalApi.put(id,data).then(function(res){dispatch({type:PUT_APPROVED,payload:res});}).catch(function(err){dispatch(getAlerts({msg:err.response.statusText,title:'Error'}));});};};","map":{"version":3,"sources":["C:/Users/anhdu/OneDrive/Desktop/HrManager/hrmanager/template/src/redux/actions/approvalActions.js"],"names":["SET_APPROVED","ADD_APPROVED","PUT_APPROVED","approvalApi","getAlerts","setApproval","items","type","payload","fetchApproval","dispatch","getAll","then","res","catch","err","msg","message","addApproval","data","post","title","response","statusText","editApproval","id","put"],"mappings":"mTAAA,OACIA,YADJ,CAEIC,YAFJ,CAGIC,YAHJ,KAIO,SAJP,CAKA,MAAOC,CAAAA,WAAP,KAAwB,uBAAxB,CACA,OAASC,SAAT,KAA0B,qBAA1B,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,QAAY,CACnCC,IAAI,CAAEP,YAD6B,CAEnCQ,OAAO,CAAEF,KAF0B,CAAZ,EAApB,CAIP;AACA,MAAO,IAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,kGAAM,iBAAOC,QAAP,kHAC/BP,WAAW,CAACQ,MAAZ,GACKC,IADL,CACU,SAAAC,GAAG,QAAIH,CAAAA,QAAQ,CAACL,WAAW,CAACQ,GAAD,CAAZ,CAAZ,EADb,EAEKC,KAFL,CAEW,SAAAC,GAAG,QAAIL,CAAAA,QAAQ,CAACN,SAAS,CAAC,CAAEY,GAAG,8BAAwBD,GAAG,CAACE,OAA5B,KAAL,CAA6CV,IAAI,CAAE,OAAnD,CAAD,CAAV,CAAZ,EAFd,EAD+B,sDAAN,gEAAtB,CAMP;AACA,MAAO,IAAMW,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,IAAD,QAAU,UAACT,QAAD,CAAc,CAC/CP,WAAW,CAACiB,IAAZ,CAAiBD,IAAjB,EACKP,IADL,CACU,SAAAC,GAAG,CAAI,CACTH,QAAQ,CAACN,SAAS,CAAC,CAAEY,GAAG,kDAAL,CAA8BK,KAAK,CAAE,SAArC,CAAD,CAAV,CAAR,CACAX,QAAQ,CAAC,CACLH,IAAI,CAAEN,YADD,CAELO,OAAO,CAAEK,GAFJ,CAAD,CAAR,CAIH,CAPL,EAQKC,KARL,CAQW,SAAAC,GAAG,CAAI,CACVL,QAAQ,CAACN,SAAS,CAAC,CAAEY,GAAG,CAAED,GAAG,CAACO,QAAJ,CAAaC,UAApB,CAAgCF,KAAK,CAAE,OAAvC,CAAD,CAAV,CAAR,CACH,CAVL,EAWH,CAZ0B,EAApB,CAaP;AACA,MAAO,IAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,EAAD,CAAKN,IAAL,QAAc,UAACT,QAAD,CAAc,CACpDP,WAAW,CAACuB,GAAZ,CAAgBD,EAAhB,CAAoBN,IAApB,EACKP,IADL,CACU,SAAAC,GAAG,CAAI,CACTH,QAAQ,CAAC,CACLH,IAAI,CAAEL,YADD,CAELM,OAAO,CAAEK,GAFJ,CAAD,CAAR,CAIH,CANL,EAOKC,KAPL,CAOW,SAAAC,GAAG,CAAI,CACVL,QAAQ,CAACN,SAAS,CAAC,CAAEY,GAAG,CAAED,GAAG,CAACO,QAAJ,CAAaC,UAApB,CAAgCF,KAAK,CAAE,OAAvC,CAAD,CAAV,CAAR,CACH,CATL,EAUH,CAX2B,EAArB","sourcesContent":["import {\r\n    SET_APPROVED,\r\n    ADD_APPROVED,\r\n    PUT_APPROVED\r\n} from './types'\r\nimport approvalApi from '../../api/approvalApi';\r\nimport { getAlerts } from '../actions/alertAct'\r\n\r\nexport const setApproval = (items) => ({\r\n    type: SET_APPROVED,\r\n    payload: items,\r\n});\r\n// fetch all \r\nexport const fetchApproval = () => async (dispatch) => {\r\n    approvalApi.getAll()\r\n        .then(res => dispatch(setApproval(res)))\r\n        .catch(err => dispatch(getAlerts({ msg: `disconnect fetch : ${err.message} `, type: 'error' })))\r\n};\r\n\r\n// Create approval\r\nexport const addApproval = (data) => (dispatch) => {\r\n    approvalApi.post(data)\r\n        .then(res => {\r\n            dispatch(getAlerts({ msg: `Đã tạo đơn xin nghỉ`, title: 'Success' }));\r\n            dispatch({\r\n                type: ADD_APPROVED,\r\n                payload: res\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch(getAlerts({ msg: err.response.statusText, title: 'Error' }))\r\n        });\r\n}\r\n// Put approval\r\nexport const editApproval = (id, data) => (dispatch) => {\r\n    approvalApi.put(id, data)\r\n        .then(res => {\r\n            dispatch({\r\n                type: PUT_APPROVED,\r\n                payload: res\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch(getAlerts({ msg: err.response.statusText, title: 'Error' }))\r\n        });\r\n}"]},"metadata":{},"sourceType":"module"}