{"ast":null,"code":"import { SET_EMPLOYEES, DELETE_EMPLOYEE, ADD_EMPLOYEE } from \"./types\";\nimport employeeApi from \"../../api/employeeApi\";\nimport { getAlerts } from \"./alertAct\"; //getAll list Employee\n\nexport const setEmployee = items => ({\n  type: SET_EMPLOYEES,\n  payload: items\n}); // fetch all Employee\n\nexport const fetchEmployees = () => async dispatch => {\n  employeeApi.getAll().then(res => dispatch(setEmployee(res))).catch(err => dispatch(getAlerts({\n    msg: \"disconnect fetch\",\n    type: 'error'\n  })));\n}; // Delete employee\n\nexport const deleteEmployee = id => dispatch => {\n  employeeApi.delete(id).then(res => {\n    dispatch(getAlerts({\n      msg: `Success delete`,\n      title: 'Success'\n    }));\n    dispatch({\n      type: DELETE_EMPLOYEE,\n      payload: id\n    });\n  }).catch(err => dispatch(getAlerts({\n    msg: err.response.statusText,\n    type: 'error'\n  })));\n}; // add employee\n\nexport const addEmployee = employee => dispatch => {\n  employeeApi.post(employee).then(res => {\n    dispatch(getAlerts({\n      msg: `Success create employee id ${res.id}`,\n      title: 'Success'\n    }));\n    console.log(res);\n    dispatch({\n      type: ADD_EMPLOYEE,\n      payload: res\n    });\n  }).catch(err => {\n    dispatch(getAlerts({\n      msg: err.response.statusText,\n      type: 'error'\n    }));\n  });\n};","map":{"version":3,"sources":["C:/Users/anhdu/OneDrive/Desktop/HrManager/hrmanager/template/src/redux/actions/employeeAct.js"],"names":["SET_EMPLOYEES","DELETE_EMPLOYEE","ADD_EMPLOYEE","employeeApi","getAlerts","setEmployee","items","type","payload","fetchEmployees","dispatch","getAll","then","res","catch","err","msg","deleteEmployee","id","delete","title","response","statusText","addEmployee","employee","post","console","log"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,eAAxB,EAAyCC,YAAzC,QAA6D,SAA7D;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,SAAT,QAA0B,YAA1B,C,CACA;;AACA,OAAO,MAAMC,WAAW,GAAIC,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAEP,aAD+B;AAErCQ,EAAAA,OAAO,EAAEF;AAF4B,CAAZ,CAApB,C,CAKP;;AACA,OAAO,MAAMG,cAAc,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACtDP,EAAAA,WAAW,CAACQ,MAAZ,GACGC,IADH,CACQC,GAAG,IAAIH,QAAQ,CAACL,WAAW,CAACQ,GAAD,CAAZ,CADvB,EAEGC,KAFH,CAESC,GAAG,IAAIL,QAAQ,CAACN,SAAS,CAAC;AAAEY,IAAAA,GAAG,EAAE,kBAAP;AAA2BT,IAAAA,IAAI,EAAE;AAAjC,GAAD,CAAV,CAFxB;AAGD,CAJM,C,CAKP;;AACA,OAAO,MAAMU,cAAc,GAAIC,EAAD,IAASR,QAAD,IAAc;AAClDP,EAAAA,WAAW,CAACgB,MAAZ,CAAmBD,EAAnB,EACGN,IADH,CACSC,GAAD,IAAS;AACbH,IAAAA,QAAQ,CAACN,SAAS,CAAC;AAAEY,MAAAA,GAAG,EAAG,gBAAR;AAAyBI,MAAAA,KAAK,EAAE;AAAhC,KAAD,CAAV,CAAR;AACAV,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEN,eAAR;AAAyBO,MAAAA,OAAO,EAAEU;AAAlC,KAAD,CAAR;AACD,GAJH,EAKGJ,KALH,CAKSC,GAAG,IAAIL,QAAQ,CAACN,SAAS,CAAC;AAAEY,IAAAA,GAAG,EAAED,GAAG,CAACM,QAAJ,CAAaC,UAApB;AAAgCf,IAAAA,IAAI,EAAE;AAAtC,GAAD,CAAV,CALxB;AAMD,CAPM,C,CASP;;AACA,OAAO,MAAMgB,WAAW,GAAIC,QAAD,IAAed,QAAD,IAAc;AACrDP,EAAAA,WAAW,CAACsB,IAAZ,CAAiBD,QAAjB,EACGZ,IADH,CACQC,GAAG,IAAI;AACXH,IAAAA,QAAQ,CAACN,SAAS,CAAC;AAAEY,MAAAA,GAAG,EAAG,8BAA6BH,GAAG,CAACK,EAAG,EAA5C;AAA+CE,MAAAA,KAAK,EAAE;AAAtD,KAAD,CAAV,CAAR;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYd,GAAZ;AACAH,IAAAA,QAAQ,CAAC;AACPH,MAAAA,IAAI,EAAEL,YADC;AAEPM,MAAAA,OAAO,EAAEK;AAFF,KAAD,CAAR;AAID,GARH,EASGC,KATH,CASSC,GAAG,IAAI;AACZL,IAAAA,QAAQ,CAACN,SAAS,CAAC;AAAEY,MAAAA,GAAG,EAAED,GAAG,CAACM,QAAJ,CAAaC,UAApB;AAAgCf,MAAAA,IAAI,EAAE;AAAtC,KAAD,CAAV,CAAR;AACD,GAXH;AAYD,CAbM","sourcesContent":["import { SET_EMPLOYEES, DELETE_EMPLOYEE, ADD_EMPLOYEE } from \"./types\";\r\nimport employeeApi from \"../../api/employeeApi\";\r\nimport { getAlerts } from \"./alertAct\"\r\n//getAll list Employee\r\nexport const setEmployee = (items) => ({\r\n  type: SET_EMPLOYEES,\r\n  payload: items,\r\n});\r\n\r\n// fetch all Employee\r\nexport const fetchEmployees = () => async (dispatch) => {\r\n  employeeApi.getAll()\r\n    .then(res => dispatch(setEmployee(res)))\r\n    .catch(err => dispatch(getAlerts({ msg: \"disconnect fetch\", type: 'error' })))\r\n};\r\n// Delete employee\r\nexport const deleteEmployee = (id) => (dispatch) => {\r\n  employeeApi.delete(id)\r\n    .then((res) => {\r\n      dispatch(getAlerts({ msg: `Success delete`, title: 'Success' }))\r\n      dispatch({ type: DELETE_EMPLOYEE, payload: id, })\r\n    })\r\n    .catch(err => dispatch(getAlerts({ msg: err.response.statusText, type: 'error' })));\r\n}\r\n\r\n// add employee\r\nexport const addEmployee = (employee) => (dispatch) => {\r\n  employeeApi.post(employee)\r\n    .then(res => {\r\n      dispatch(getAlerts({ msg: `Success create employee id ${res.id}`, title: 'Success' }))\r\n      console.log(res)\r\n      dispatch({\r\n        type: ADD_EMPLOYEE,\r\n        payload: res\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch(getAlerts({ msg: err.response.statusText, type: 'error' }))\r\n    });\r\n} \r\n"]},"metadata":{},"sourceType":"module"}